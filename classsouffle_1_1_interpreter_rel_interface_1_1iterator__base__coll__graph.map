<map id="souffle::InterpreterRelInterface::iterator_base" name="souffle::InterpreterRelInterface::iterator_base">
<area shape="rect" id="node2" href="$classsouffle_1_1_relation_1_1iterator__base.html" title="{souffle::Relation::\literator_base\n||+ clone()\l+ getId()\l+ iterator_base()\l+ operator*()\l+ operator++()\l+ operator==()\l+ ~iterator_base()\l# equal()\l}" alt="" coords="1383,2736,1508,2931"/>
<area shape="rect" id="node37" href="$classsouffle_1_1_interpreter_rel_interface.html" title="Wrapper class for interpreter relations. " alt="" coords="1039,2707,1237,2960"/>
<area shape="rect" id="node4" href="$classsouffle_1_1tuple.html" title="Defines a tuple for the OO interface such that relations with varying columns can be accessed..." alt="" coords="309,2714,413,2953"/>
<area shape="rect" id="node5" href="$classsouffle_1_1_relation.html" title="Object&#45;oriented wrapper class for Souffle&#39;s templatized relations. " alt="" coords="700,2376,835,2629"/>
<area shape="rect" id="node9" href="$classsouffle_1_1_interpreter_relation_1_1iterator.html" title="Iterator for relation. " alt="" coords="785,2751,961,2916"/>
<area shape="rect" id="node11" href="$classsouffle_1_1_interpreter_relation.html" title="Interpreter Relation. " alt="" coords="911,2391,1087,2615"/>
<area shape="rect" id="node21" href="$structsouffle_1_1detail_1_1btree_1_1base.html" title="The base type of all node types containing essential book&#45;keeping information. " alt="" coords="1009,160,1276,355"/>
<area shape="rect" id="node12" href="$classsouffle_1_1_interpreter_index.html" title="{souffle::InterpreterIndex\n||+ equalRange()\l+ exists()\l+ insert()\l+ insert()\l+ InterpreterIndex()\l+ lowerUpperBound()\l+ order()\l+ print()\l+ purge()\l}" alt="" coords="1012,2117,1171,2312"/>
<area shape="rect" id="node13" href="$classsouffle_1_1btree__multiset.html" title="{souffle::btree_multiset\l\&lt; const RamDomain *, comparator,\l std::allocator\&lt; const RamDomain\l * \&gt;, 512 \&gt;\n||+ btree_multiset()\l+ btree_multiset()\l+ btree_multiset()\l+ btree_multiset()\l+ operator=()\l+ load()\l&#45; btree_multiset()\l}" alt="" coords="1019,1807,1248,2017"/>
<area shape="rect" id="node14" href="$classsouffle_1_1detail_1_1btree.html" title="{souffle::detail::btree\l\&lt; const RamDomain *, comparator,\l std::allocator\&lt; const RamDomain\l * \&gt;, blockSize, typename detail\l::default_strategy\&lt; const RamDomain\l * \&gt;::type, false, comparator, detail\l::updater\&lt; const RamDomain * \&gt; \&gt;\n||+ begin()\l+ btree()\l+ btree()\l+ btree()\l+ btree()\l+ check()\l+ clear()\l+ contains()\l+ contains()\l+ empty()\land 24 more...\l+ load()\l# btree()\l# covers()\l# equal()\l# less()\l# update()\l# weak_covers()\l# weak_equal()\l# weak_less()\l&#45; coversUpperBound()\l&#45; buildSubTree()\l}" alt="" coords="1025,1233,1268,1706"/>
<area shape="rect" id="node15" href="$structsouffle_1_1detail_1_1btree_1_1hint__statistics.html" title="{souffle::detail::btree\l\&lt; Key, Comparator, Allocator,\l blockSize, SearchStrategy,\l isSet, WeakComparator, Updater\l \&gt;::hint_statistics\n||}" alt="" coords="1326,784,1545,920"/>
<area shape="rect" id="node16" href="$classsouffle_1_1_cache_access_counter.html" title="A utility class to keep track of cache hits/misses. " alt="" coords="1301,167,1499,347"/>
<area shape="rect" id="node19" href="$structsouffle_1_1detail_1_1btree_1_1leaf__node.html" title="The data type representing leaf nodes of the b&#45;tree. " alt="" coords="1037,981,1256,1117"/>
<area shape="rect" id="node20" href="$structsouffle_1_1detail_1_1btree_1_1node.html" title="The actual, generic node implementation covering the operations for both, inner and leaf nodes..." alt="" coords="1013,462,1280,759"/>
<area shape="rect" id="node24" href="$structsouffle_1_1detail_1_1comparator.html" title="A generic comparator implementation as it is used by a b&#45;tree based on types that can be less&#45;than an..." alt="" coords="1723,996,1928,1103"/>
<area shape="rect" id="node25" href="$structsouffle_1_1detail_1_1default__strategy.html" title="{souffle::detail::default\l_strategy\&lt; const RamDomain * \&gt;\n||}" alt="" coords="1480,1003,1699,1095"/>
<area shape="rect" id="node26" href="$structsouffle_1_1detail_1_1binary.html" title="{souffle::detail::binary\n||}" alt="" coords="1541,572,1683,649"/>
<area shape="rect" id="node27" href="$structsouffle_1_1detail_1_1strategy__selection.html" title="{souffle::detail::strategy\l_selection\&lt; binary_search \&gt;\n||}" alt="" coords="1523,211,1709,303"/>
<area shape="rect" id="node28" href="$classsouffle_1_1_optimistic_read_write_lock.html" title="A &#39;sequential&#39; non&#45;locking implementation for an optimistic r/w lock. " alt="" coords="605,945,824,1154"/>
<area shape="rect" id="node29" href="$structsouffle_1_1detail_1_1updater.html" title="{souffle::detail::updater\l\&lt; const RamDomain * \&gt;\n||+ update()\l}" alt="" coords="849,1003,1012,1095"/>
<area shape="rect" id="node30" href="$classsouffle_1_1_interpreter_index_order.html" title="A class describing the sorting order of tuples within an index. " alt="" coords="1284,1771,1448,2053"/>
<area shape="rect" id="node32" href="$structsouffle_1_1_lock.html" title="A small utility class for implementing simple locks. " alt="" coords="1258,2154,1355,2275"/>
<area shape="rect" id="node40" href="$classsouffle_1_1_symbol_table.html" title="Global pool of re&#45;usable strings. " alt="" coords="1191,2376,1343,2629"/>
</map>
