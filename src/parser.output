Grammar

    0 $accept: program "end of file"

    1 program: unit

    2 unit: unit type
    3     | unit functor_decl
    4     | unit relation_decl
    5     | unit lattice_decl
    6     | unit lattice_asscoiation
    7     | unit lattice_def
    8     | unit load_head
    9     | unit store_head
   10     | unit fact
   11     | unit rule
   12     | unit component
   13     | unit comp_init
   14     | unit pragma
   15     | %empty

   16 pragma: "pragma directive" "symbol" "symbol"
   17       | "pragma directive" "symbol"

   18 type_id: "identifier"
   19        | type_id "." "identifier"

   20 type: "numeric type declaration" "identifier"
   21     | "symbolic type declaration" "identifier"
   22     | "type declaration" "identifier"
   23     | "type declaration" "identifier" "=" uniontype
   24     | "type declaration" "identifier" "=" "[" recordtype "]"
   25     | "type declaration" "identifier" "=" "[" "]"
   26     | "enum declaration" "identifier" "=" "{" enumtype "}"

   27 recordtype: "identifier" ":" type_id
   28           | recordtype "," "identifier" ":" type_id

   29 uniontype: type_id
   30          | uniontype "|" type_id

   31 enumtype: "case" "identifier"
   32         | enumtype "," "case" "identifier"

   33 rel_id: "identifier"
   34       | rel_id "." "identifier"

   35 non_empty_attributes: "identifier" ":" type_id
   36                     | attributes "," "identifier" ":" type_id

   37 attributes: non_empty_attributes
   38           | %empty

   39 qualifiers: qualifiers "relation qualifier output"
   40           | qualifiers "relation qualifier input"
   41           | qualifiers "relation qualifier printsize"
   42           | qualifiers "relation qualifier overidable"
   43           | qualifiers "relation qualifier inline"
   44           | qualifiers "BRIE datastructure qualifier"
   45           | qualifiers "BTREE datastructure qualifier"
   46           | qualifiers "equivalence relation qualifier"
   47           | %empty

   48 functor_decl: "functor declaration" "identifier" "(" functor_typeargs ")" ":" functor_type
   49             | "functor declaration" "identifier" "(" ")" ":" functor_type

   50 functor_type: "identifier"

   51 functor_typeargs: functor_type "," functor_typeargs
   52                 | functor_type

   53 relation_decl: "relation declaration" relation_list

   54 relation_list: relation_body
   55              | "identifier" "," relation_list

   56 relation_body: "identifier" "(" attributes ")" qualifiers

   57 lattice_decl: "lattice declaration" relation_list

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" "," "identifier" "," "identifier" "," "identifier" "," "identifier" ")"

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_def_type "}"

   60 lattice_def_type: "case" "(" arg "," arg ")" "=>" arg
   61                 | lattice_def_type "," "case" "(" arg "," arg ")" "=>" arg
   62                 | lattice_def_type "," "case" "_" "=>" arg

   63 non_empty_key_value_pairs: "identifier" "=" "symbol"
   64                          | key_value_pairs "," "identifier" "=" "symbol"
   65                          | "identifier" "=" "identifier"
   66                          | key_value_pairs "," "identifier" "=" "identifier"
   67                          | "identifier" "=" "true literal constraint"
   68                          | key_value_pairs "," "identifier" "=" "true literal constraint"
   69                          | "identifier" "=" "false literal constraint"
   70                          | key_value_pairs "," "identifier" "=" "false literal constraint"

   71 key_value_pairs: non_empty_key_value_pairs
   72                | %empty

   73 load_head: "input directives declaration" iodirective_list

   74 store_head: "output directives declaration" iodirective_list
   75           | "printsize directives declaration" iodirective_list

   76 iodirective_list: iodirective_body
   77                 | "identifier" "," iodirective_list

   78 iodirective_body: rel_id "(" key_value_pairs ")"
   79                 | rel_id

   80 arg: "symbol"
   81    | "_"
   82    | "$"
   83    | "@" "identifier" functor_list
   84    | "identifier"
   85    | "number"
   86    | "(" arg ")"
   87    | arg "bor" arg
   88    | arg "bxor" arg
   89    | arg "band" arg
   90    | arg "lor" arg
   91    | arg "land" arg
   92    | arg "+" arg
   93    | arg "-" arg
   94    | arg "*" arg
   95    | arg "/" arg
   96    | arg "%" arg
   97    | arg "^" arg
   98    | "max aggregator" "(" arg "," arg ")"
   99    | "min aggregator" "(" arg "," arg ")"
  100    | "concatenation of two strings" "(" arg "," arg ")"
  101    | "ordinal number of a string" "(" arg ")"
  102    | "length of a string" "(" arg ")"
  103    | "convert string to number" "(" arg ")"
  104    | "convert number to string" "(" arg ")"
  105    | "sub-string of a string" "(" arg "," arg "," arg ")"
  106    | condition "?" arg ":" arg
  107    | arg "type cast" "identifier"
  108    | "-" arg
  109    | "bnot" arg
  110    | "lnot" arg
  111    | "[" "]"
  112    | "[" recordlist "]"
  113    | "nil reference"
  114    | "count aggregator" ":" atom
  115    | "count aggregator" ":" "{" body "}"
  116    | "sum aggregator" arg ":" atom
  117    | "sum aggregator" arg ":" "{" body "}"
  118    | "min aggregator" arg ":" atom
  119    | "min aggregator" arg ":" "{" body "}"
  120    | "max aggregator" arg ":" atom
  121    | "max aggregator" arg ":" "{" body "}"
  122    | "reserved keyword" "(" arg ")"

  123 condition: arg "=" arg
  124          | arg "!" "=" arg
  125          | arg "<" arg
  126          | arg "<" "=" arg
  127          | arg ">" arg
  128          | arg ">" "=" arg

  129 functor_list: "(" ")"
  130             | "(" functor_args ")"

  131 functor_args: arg
  132             | functor_args "," arg

  133 recordlist: arg
  134           | recordlist "," arg

  135 non_empty_arg_list: arg
  136                   | arg_list "," arg

  137 arg_list: non_empty_arg_list
  138         | %empty

  139 atom: rel_id "(" arg_list ")"

  140 literal: arg "relational operator" arg
  141        | arg "<" arg
  142        | arg ">" arg
  143        | arg "=" arg
  144        | atom
  145        | "match predicate" "(" arg "," arg ")"
  146        | "checks whether substring is contained in a string" "(" arg "," arg ")"
  147        | "true literal constraint"
  148        | "false literal constraint"

  149 fact: atom "."

  150 head: atom
  151     | head "," atom

  152 term: literal
  153     | "!" term
  154     | "(" disjunction ")"

  155 conjunction: term
  156            | conjunction "," term

  157 disjunction: conjunction
  158            | disjunction ";" conjunction

  159 body: disjunction

  160 exec_order_list: "number"
  161                | exec_order_list "," "number"

  162 exec_order: "(" exec_order_list ")"

  163 exec_plan_list: "number" ":" exec_order
  164               | exec_plan_list "," "number" ":" exec_order

  165 exec_plan: "plan keyword" exec_plan_list

  166 rule_def: head ":-" body "."

  167 rule: rule_def
  168     | rule "strict marker"
  169     | rule exec_plan

  170 type_param_list: "identifier"
  171                | type_param_list "," type_id

  172 type_params: %empty
  173            | "<" type_param_list ">"

  174 comp_type: "identifier" type_params

  175 component_head: "component declaration" comp_type
  176               | component_head ":" comp_type
  177               | component_head "," comp_type

  178 component_body: component_body type
  179               | component_body relation_decl
  180               | component_body load_head
  181               | component_body store_head
  182               | component_body fact
  183               | component_body rule
  184               | component_body comp_override
  185               | component_body component
  186               | component_body comp_init
  187               | %empty

  188 component: component_head "{" component_body "}"

  189 comp_init: "component instantiation" "identifier" "=" comp_type

  190 comp_override: "override rules of super-component" "identifier"


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
"reserved keyword" (258) 122
"symbol" (259) 16 17 63 64 80
"identifier" (260) 18 19 20 21 22 23 24 25 26 27 28 31 32 33 34 35
    36 48 49 50 55 56 58 59 63 64 65 66 67 68 69 70 77 83 84 107 170
    174 189 190
"number" (261) 85 160 161 163 164
"relational operator" (262) 140
"pragma directive" (263) 16 17
"relation qualifier output" (264) 39
"relation qualifier input" (265) 40
"relation qualifier printsize" (266) 41
"BRIE datastructure qualifier" (267) 44
"BTREE datastructure qualifier" (268) 45
"equivalence relation qualifier" (269) 46
"relation qualifier overidable" (270) 42
"relation qualifier inline" (271) 43
"match predicate" (272) 145
"checks whether substring is contained in a string" (273) 146
"concatenation of two strings" (274) 100
"ordinal number of a string" (275) 101
"length of a string" (276) 102
"sub-string of a string" (277) 105
"min aggregator" (278) 99 118 119
"max aggregator" (279) 98 120 121
"count aggregator" (280) 114 115
"sum aggregator" (281) 116 117
"true literal constraint" (282) 67 68 147
"false literal constraint" (283) 69 70 148
"strict marker" (284) 168
"plan keyword" (285) 165
":-" (286) 166
"relation declaration" (287) 53
"lattice declaration" (288) 57
"lattice components type declaration" (289) 58
"lattice binary function definition" (290) 59
"functor declaration" (291) 48 49
"input directives declaration" (292) 73
"output directives declaration" (293) 74
"printsize directives declaration" (294) 75
"override rules of super-component" (295) 190
"type declaration" (296) 22 23 24 25
"enum declaration" (297) 26
"component declaration" (298) 175
"component instantiation" (299) 189
"numeric type declaration" (300) 20
"symbolic type declaration" (301) 21
"convert string to number" (302) 103
"convert number to string" (303) 104
"type cast" (304) 107
"nil reference" (305) 113
"|" (306) 30
"[" (307) 24 25 111 112
"]" (308) 24 25 111 112
"_" (309) 62 81
"$" (310) 82
"+" (311) 92
"-" (312) 93 108
"!" (313) 124 153
"?" (314) 106
"(" (315) 48 49 56 58 59 60 61 78 86 98 99 100 101 102 103 104 105
    122 129 130 139 145 146 154 162
")" (316) 48 49 56 58 59 60 61 78 86 98 99 100 101 102 103 104 105
    122 129 130 139 145 146 154 162
"," (317) 28 32 36 51 55 58 59 60 61 62 64 66 68 70 77 98 99 100 105
    132 134 136 145 146 151 156 161 164 171 177
":" (318) 27 28 35 36 48 49 59 106 114 115 116 117 118 119 120 121
    163 164 176
";" (319) 158
"." (320) 19 34 149 166
"=>" (321) 60 61 62
"=" (322) 23 24 25 26 58 63 64 65 66 67 68 69 70 123 124 126 128 143
    189
"*" (323) 94
"@" (324) 83
"/" (325) 95
"^" (326) 97
"%" (327) 96
"{" (328) 26 59 115 117 119 121 188
"}" (329) 26 59 115 117 119 121 188
"<" (330) 58 125 126 141 173
">" (331) 58 127 128 142 173
"band" (332) 89
"bor" (333) 87
"bxor" (334) 88
"bnot" (335) 109
"land" (336) 91
"lor" (337) 90
"lnot" (338) 110
"case" (339) 31 32 60 61 62
NEG (340)


Nonterminals, with rules where they appear

$accept (86)
    on left: 0
program (87)
    on left: 1, on right: 0
unit (88)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15, on right: 1 2 3 4 5
    6 7 8 9 10 11 12 13 14
pragma (89)
    on left: 16 17, on right: 14
type_id (90)
    on left: 18 19, on right: 19 27 28 29 30 35 36 171
type (91)
    on left: 20 21 22 23 24 25 26, on right: 2 178
recordtype (92)
    on left: 27 28, on right: 24 28
uniontype (93)
    on left: 29 30, on right: 23 30
enumtype (94)
    on left: 31 32, on right: 26 32
rel_id (95)
    on left: 33 34, on right: 34 78 79 139
non_empty_attributes (96)
    on left: 35 36, on right: 37
attributes (97)
    on left: 37 38, on right: 36 56
qualifiers (98)
    on left: 39 40 41 42 43 44 45 46 47, on right: 39 40 41 42 43 44
    45 46 56
functor_decl (99)
    on left: 48 49, on right: 3
functor_type (100)
    on left: 50, on right: 48 49 51 52
functor_typeargs (101)
    on left: 51 52, on right: 48 51
relation_decl (102)
    on left: 53, on right: 4 179
relation_list (103)
    on left: 54 55, on right: 53 55 57
relation_body (104)
    on left: 56, on right: 54
lattice_decl (105)
    on left: 57, on right: 5
lattice_asscoiation (106)
    on left: 58, on right: 6
lattice_def (107)
    on left: 59, on right: 7
lattice_def_type (108)
    on left: 60 61 62, on right: 59 61 62
non_empty_key_value_pairs (109)
    on left: 63 64 65 66 67 68 69 70, on right: 71
key_value_pairs (110)
    on left: 71 72, on right: 64 66 68 70 78
load_head (111)
    on left: 73, on right: 8 180
store_head (112)
    on left: 74 75, on right: 9 181
iodirective_list (113)
    on left: 76 77, on right: 73 74 75 77
iodirective_body (114)
    on left: 78 79, on right: 76
arg (115)
    on left: 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97
    98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114
    115 116 117 118 119 120 121 122, on right: 60 61 62 86 87 88 89
    90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
    109 110 116 117 118 119 120 121 122 123 124 125 126 127 128 131
    132 133 134 135 136 140 141 142 143 145 146
condition (116)
    on left: 123 124 125 126 127 128, on right: 106
functor_list (117)
    on left: 129 130, on right: 83
functor_args (118)
    on left: 131 132, on right: 130 132
recordlist (119)
    on left: 133 134, on right: 112 134
non_empty_arg_list (120)
    on left: 135 136, on right: 137
arg_list (121)
    on left: 137 138, on right: 136 139
atom (122)
    on left: 139, on right: 114 116 118 120 144 149 150 151
literal (123)
    on left: 140 141 142 143 144 145 146 147 148, on right: 152
fact (124)
    on left: 149, on right: 10 182
head (125)
    on left: 150 151, on right: 151 166
term (126)
    on left: 152 153 154, on right: 153 155 156
conjunction (127)
    on left: 155 156, on right: 156 157 158
disjunction (128)
    on left: 157 158, on right: 154 158 159
body (129)
    on left: 159, on right: 115 117 119 121 166
exec_order_list (130)
    on left: 160 161, on right: 161 162
exec_order (131)
    on left: 162, on right: 163 164
exec_plan_list (132)
    on left: 163 164, on right: 164 165
exec_plan (133)
    on left: 165, on right: 169
rule_def (134)
    on left: 166, on right: 167
rule (135)
    on left: 167 168 169, on right: 11 168 169 183
type_param_list (136)
    on left: 170 171, on right: 171 173
type_params (137)
    on left: 172 173, on right: 174
comp_type (138)
    on left: 174, on right: 175 176 177 189
component_head (139)
    on left: 175 176 177, on right: 176 177 188
component_body (140)
    on left: 178 179 180 181 182 183 184 185 186 187, on right: 178
    179 180 181 182 183 184 185 186 188
component (141)
    on left: 188, on right: 12 185
comp_init (142)
    on left: 189, on right: 13 186
comp_override (143)
    on left: 190, on right: 184


State 0

    0 $accept: . program "end of file"

    $default  reduce using rule 15 (unit)

    program  go to state 1
    unit     go to state 2


State 1

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 3


State 2

    1 program: unit .
    2 unit: unit . type
    3     | unit . functor_decl
    4     | unit . relation_decl
    5     | unit . lattice_decl
    6     | unit . lattice_asscoiation
    7     | unit . lattice_def
    8     | unit . load_head
    9     | unit . store_head
   10     | unit . fact
   11     | unit . rule
   12     | unit . component
   13     | unit . comp_init
   14     | unit . pragma

    "identifier"                           shift, and go to state 4
    "pragma directive"                     shift, and go to state 5
    "relation declaration"                 shift, and go to state 6
    "lattice declaration"                  shift, and go to state 7
    "lattice components type declaration"  shift, and go to state 8
    "lattice binary function definition"   shift, and go to state 9
    "functor declaration"                  shift, and go to state 10
    "input directives declaration"         shift, and go to state 11
    "output directives declaration"        shift, and go to state 12
    "printsize directives declaration"     shift, and go to state 13
    "type declaration"                     shift, and go to state 14
    "enum declaration"                     shift, and go to state 15
    "component declaration"                shift, and go to state 16
    "component instantiation"              shift, and go to state 17
    "numeric type declaration"             shift, and go to state 18
    "symbolic type declaration"            shift, and go to state 19

    $default  reduce using rule 1 (program)

    pragma               go to state 20
    type                 go to state 21
    rel_id               go to state 22
    functor_decl         go to state 23
    relation_decl        go to state 24
    lattice_decl         go to state 25
    lattice_asscoiation  go to state 26
    lattice_def          go to state 27
    load_head            go to state 28
    store_head           go to state 29
    atom                 go to state 30
    fact                 go to state 31
    head                 go to state 32
    rule_def             go to state 33
    rule                 go to state 34
    component_head       go to state 35
    component            go to state 36
    comp_init            go to state 37


State 3

    0 $accept: program "end of file" .

    $default  accept


State 4

   33 rel_id: "identifier" .

    $default  reduce using rule 33 (rel_id)


State 5

   16 pragma: "pragma directive" . "symbol" "symbol"
   17       | "pragma directive" . "symbol"

    "symbol"  shift, and go to state 38


State 6

   53 relation_decl: "relation declaration" . relation_list

    "identifier"  shift, and go to state 39

    relation_list  go to state 40
    relation_body  go to state 41


State 7

   57 lattice_decl: "lattice declaration" . relation_list

    "identifier"  shift, and go to state 39

    relation_list  go to state 42
    relation_body  go to state 41


State 8

   58 lattice_asscoiation: "lattice components type declaration" . "identifier" "<" ">" "=" "(" "identifier" "," "identifier" "," "identifier" "," "identifier" "," "identifier" ")"

    "identifier"  shift, and go to state 43


State 9

   59 lattice_def: "lattice binary function definition" . "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_def_type "}"

    "identifier"  shift, and go to state 44


State 10

   48 functor_decl: "functor declaration" . "identifier" "(" functor_typeargs ")" ":" functor_type
   49             | "functor declaration" . "identifier" "(" ")" ":" functor_type

    "identifier"  shift, and go to state 45


State 11

   73 load_head: "input directives declaration" . iodirective_list

    "identifier"  shift, and go to state 46

    rel_id            go to state 47
    iodirective_list  go to state 48
    iodirective_body  go to state 49


State 12

   74 store_head: "output directives declaration" . iodirective_list

    "identifier"  shift, and go to state 46

    rel_id            go to state 47
    iodirective_list  go to state 50
    iodirective_body  go to state 49


State 13

   75 store_head: "printsize directives declaration" . iodirective_list

    "identifier"  shift, and go to state 46

    rel_id            go to state 47
    iodirective_list  go to state 51
    iodirective_body  go to state 49


State 14

   22 type: "type declaration" . "identifier"
   23     | "type declaration" . "identifier" "=" uniontype
   24     | "type declaration" . "identifier" "=" "[" recordtype "]"
   25     | "type declaration" . "identifier" "=" "[" "]"

    "identifier"  shift, and go to state 52


State 15

   26 type: "enum declaration" . "identifier" "=" "{" enumtype "}"

    "identifier"  shift, and go to state 53


State 16

  175 component_head: "component declaration" . comp_type

    "identifier"  shift, and go to state 54

    comp_type  go to state 55


State 17

  189 comp_init: "component instantiation" . "identifier" "=" comp_type

    "identifier"  shift, and go to state 56


State 18

   20 type: "numeric type declaration" . "identifier"

    "identifier"  shift, and go to state 57


State 19

   21 type: "symbolic type declaration" . "identifier"

    "identifier"  shift, and go to state 58


State 20

   14 unit: unit pragma .

    $default  reduce using rule 14 (unit)


State 21

    2 unit: unit type .

    $default  reduce using rule 2 (unit)


State 22

   34 rel_id: rel_id . "." "identifier"
  139 atom: rel_id . "(" arg_list ")"

    "("  shift, and go to state 59
    "."  shift, and go to state 60


State 23

    3 unit: unit functor_decl .

    $default  reduce using rule 3 (unit)


State 24

    4 unit: unit relation_decl .

    $default  reduce using rule 4 (unit)


State 25

    5 unit: unit lattice_decl .

    $default  reduce using rule 5 (unit)


State 26

    6 unit: unit lattice_asscoiation .

    $default  reduce using rule 6 (unit)


State 27

    7 unit: unit lattice_def .

    $default  reduce using rule 7 (unit)


State 28

    8 unit: unit load_head .

    $default  reduce using rule 8 (unit)


State 29

    9 unit: unit store_head .

    $default  reduce using rule 9 (unit)


State 30

  149 fact: atom . "."
  150 head: atom .

    "."  shift, and go to state 61

    $default  reduce using rule 150 (head)


State 31

   10 unit: unit fact .

    $default  reduce using rule 10 (unit)


State 32

  151 head: head . "," atom
  166 rule_def: head . ":-" body "."

    ":-"  shift, and go to state 62
    ","   shift, and go to state 63


State 33

  167 rule: rule_def .

    $default  reduce using rule 167 (rule)


State 34

   11 unit: unit rule .
  168 rule: rule . "strict marker"
  169     | rule . exec_plan

    "strict marker"  shift, and go to state 64
    "plan keyword"   shift, and go to state 65

    $default  reduce using rule 11 (unit)

    exec_plan  go to state 66


State 35

  176 component_head: component_head . ":" comp_type
  177               | component_head . "," comp_type
  188 component: component_head . "{" component_body "}"

    ","  shift, and go to state 67
    ":"  shift, and go to state 68
    "{"  shift, and go to state 69


State 36

   12 unit: unit component .

    $default  reduce using rule 12 (unit)


State 37

   13 unit: unit comp_init .

    $default  reduce using rule 13 (unit)


State 38

   16 pragma: "pragma directive" "symbol" . "symbol"
   17       | "pragma directive" "symbol" .

    "symbol"  shift, and go to state 70

    $default  reduce using rule 17 (pragma)


State 39

   55 relation_list: "identifier" . "," relation_list
   56 relation_body: "identifier" . "(" attributes ")" qualifiers

    "("  shift, and go to state 71
    ","  shift, and go to state 72


State 40

   53 relation_decl: "relation declaration" relation_list .

    $default  reduce using rule 53 (relation_decl)


State 41

   54 relation_list: relation_body .

    $default  reduce using rule 54 (relation_list)


State 42

   57 lattice_decl: "lattice declaration" relation_list .

    $default  reduce using rule 57 (lattice_decl)


State 43

   58 lattice_asscoiation: "lattice components type declaration" "identifier" . "<" ">" "=" "(" "identifier" "," "identifier" "," "identifier" "," "identifier" "," "identifier" ")"

    "<"  shift, and go to state 73


State 44

   59 lattice_def: "lattice binary function definition" "identifier" . "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_def_type "}"

    "("  shift, and go to state 74


State 45

   48 functor_decl: "functor declaration" "identifier" . "(" functor_typeargs ")" ":" functor_type
   49             | "functor declaration" "identifier" . "(" ")" ":" functor_type

    "("  shift, and go to state 75


State 46

   33 rel_id: "identifier" .
   77 iodirective_list: "identifier" . "," iodirective_list

    ","  shift, and go to state 76

    $default  reduce using rule 33 (rel_id)


State 47

   34 rel_id: rel_id . "." "identifier"
   78 iodirective_body: rel_id . "(" key_value_pairs ")"
   79                 | rel_id .

    "("  shift, and go to state 77
    "."  shift, and go to state 60

    $default  reduce using rule 79 (iodirective_body)


State 48

   73 load_head: "input directives declaration" iodirective_list .

    $default  reduce using rule 73 (load_head)


State 49

   76 iodirective_list: iodirective_body .

    $default  reduce using rule 76 (iodirective_list)


State 50

   74 store_head: "output directives declaration" iodirective_list .

    $default  reduce using rule 74 (store_head)


State 51

   75 store_head: "printsize directives declaration" iodirective_list .

    $default  reduce using rule 75 (store_head)


State 52

   22 type: "type declaration" "identifier" .
   23     | "type declaration" "identifier" . "=" uniontype
   24     | "type declaration" "identifier" . "=" "[" recordtype "]"
   25     | "type declaration" "identifier" . "=" "[" "]"

    "="  shift, and go to state 78

    $default  reduce using rule 22 (type)


State 53

   26 type: "enum declaration" "identifier" . "=" "{" enumtype "}"

    "="  shift, and go to state 79


State 54

  174 comp_type: "identifier" . type_params

    "<"  shift, and go to state 80

    $default  reduce using rule 172 (type_params)

    type_params  go to state 81


State 55

  175 component_head: "component declaration" comp_type .

    $default  reduce using rule 175 (component_head)


State 56

  189 comp_init: "component instantiation" "identifier" . "=" comp_type

    "="  shift, and go to state 82


State 57

   20 type: "numeric type declaration" "identifier" .

    $default  reduce using rule 20 (type)


State 58

   21 type: "symbolic type declaration" "identifier" .

    $default  reduce using rule 21 (type)


State 59

  139 atom: rel_id "(" . arg_list ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    $default  reduce using rule 138 (arg_list)

    arg                 go to state 106
    condition           go to state 107
    non_empty_arg_list  go to state 108
    arg_list            go to state 109


State 60

   34 rel_id: rel_id "." . "identifier"

    "identifier"  shift, and go to state 110


State 61

  149 fact: atom "." .

    $default  reduce using rule 149 (fact)


State 62

  166 rule_def: head ":-" . body "."

    "reserved keyword"                                   shift, and go to state 83
    "symbol"                                             shift, and go to state 84
    "identifier"                                         shift, and go to state 111
    "number"                                             shift, and go to state 86
    "match predicate"                                    shift, and go to state 112
    "checks whether substring is contained in a string"  shift, and go to state 113
    "concatenation of two strings"                       shift, and go to state 87
    "ordinal number of a string"                         shift, and go to state 88
    "length of a string"                                 shift, and go to state 89
    "sub-string of a string"                             shift, and go to state 90
    "min aggregator"                                     shift, and go to state 91
    "max aggregator"                                     shift, and go to state 92
    "count aggregator"                                   shift, and go to state 93
    "sum aggregator"                                     shift, and go to state 94
    "true literal constraint"                            shift, and go to state 114
    "false literal constraint"                           shift, and go to state 115
    "convert string to number"                           shift, and go to state 95
    "convert number to string"                           shift, and go to state 96
    "nil reference"                                      shift, and go to state 97
    "["                                                  shift, and go to state 98
    "_"                                                  shift, and go to state 99
    "$"                                                  shift, and go to state 100
    "-"                                                  shift, and go to state 101
    "!"                                                  shift, and go to state 116
    "("                                                  shift, and go to state 117
    "@"                                                  shift, and go to state 103
    "bnot"                                               shift, and go to state 104
    "lnot"                                               shift, and go to state 105

    rel_id       go to state 22
    arg          go to state 118
    condition    go to state 107
    atom         go to state 119
    literal      go to state 120
    term         go to state 121
    conjunction  go to state 122
    disjunction  go to state 123
    body         go to state 124


State 63

  151 head: head "," . atom

    "identifier"  shift, and go to state 4

    rel_id  go to state 22
    atom    go to state 125


State 64

  168 rule: rule "strict marker" .

    $default  reduce using rule 168 (rule)


State 65

  165 exec_plan: "plan keyword" . exec_plan_list

    "number"  shift, and go to state 126

    exec_plan_list  go to state 127


State 66

  169 rule: rule exec_plan .

    $default  reduce using rule 169 (rule)


State 67

  177 component_head: component_head "," . comp_type

    "identifier"  shift, and go to state 54

    comp_type  go to state 128


State 68

  176 component_head: component_head ":" . comp_type

    "identifier"  shift, and go to state 54

    comp_type  go to state 129


State 69

  188 component: component_head "{" . component_body "}"

    $default  reduce using rule 187 (component_body)

    component_body  go to state 130


State 70

   16 pragma: "pragma directive" "symbol" "symbol" .

    $default  reduce using rule 16 (pragma)


State 71

   56 relation_body: "identifier" "(" . attributes ")" qualifiers

    "identifier"  shift, and go to state 131

    $default  reduce using rule 38 (attributes)

    non_empty_attributes  go to state 132
    attributes            go to state 133


State 72

   55 relation_list: "identifier" "," . relation_list

    "identifier"  shift, and go to state 39

    relation_list  go to state 134
    relation_body  go to state 41


State 73

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" . ">" "=" "(" "identifier" "," "identifier" "," "identifier" "," "identifier" "," "identifier" ")"

    ">"  shift, and go to state 135


State 74

   59 lattice_def: "lattice binary function definition" "identifier" "(" . "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_def_type "}"

    "identifier"  shift, and go to state 136


State 75

   48 functor_decl: "functor declaration" "identifier" "(" . functor_typeargs ")" ":" functor_type
   49             | "functor declaration" "identifier" "(" . ")" ":" functor_type

    "identifier"  shift, and go to state 137
    ")"           shift, and go to state 138

    functor_type      go to state 139
    functor_typeargs  go to state 140


State 76

   77 iodirective_list: "identifier" "," . iodirective_list

    "identifier"  shift, and go to state 46

    rel_id            go to state 47
    iodirective_list  go to state 141
    iodirective_body  go to state 49


State 77

   78 iodirective_body: rel_id "(" . key_value_pairs ")"

    "identifier"  shift, and go to state 142

    $default  reduce using rule 72 (key_value_pairs)

    non_empty_key_value_pairs  go to state 143
    key_value_pairs            go to state 144


State 78

   23 type: "type declaration" "identifier" "=" . uniontype
   24     | "type declaration" "identifier" "=" . "[" recordtype "]"
   25     | "type declaration" "identifier" "=" . "[" "]"

    "identifier"  shift, and go to state 145
    "["           shift, and go to state 146

    type_id    go to state 147
    uniontype  go to state 148


State 79

   26 type: "enum declaration" "identifier" "=" . "{" enumtype "}"

    "{"  shift, and go to state 149


State 80

  173 type_params: "<" . type_param_list ">"

    "identifier"  shift, and go to state 150

    type_param_list  go to state 151


State 81

  174 comp_type: "identifier" type_params .

    $default  reduce using rule 174 (comp_type)


State 82

  189 comp_init: "component instantiation" "identifier" "=" . comp_type

    "identifier"  shift, and go to state 54

    comp_type  go to state 152


State 83

  122 arg: "reserved keyword" . "(" arg ")"

    "("  shift, and go to state 153


State 84

   80 arg: "symbol" .

    $default  reduce using rule 80 (arg)


State 85

   84 arg: "identifier" .

    $default  reduce using rule 84 (arg)


State 86

   85 arg: "number" .

    $default  reduce using rule 85 (arg)


State 87

  100 arg: "concatenation of two strings" . "(" arg "," arg ")"

    "("  shift, and go to state 154


State 88

  101 arg: "ordinal number of a string" . "(" arg ")"

    "("  shift, and go to state 155


State 89

  102 arg: "length of a string" . "(" arg ")"

    "("  shift, and go to state 156


State 90

  105 arg: "sub-string of a string" . "(" arg "," arg "," arg ")"

    "("  shift, and go to state 157


State 91

   99 arg: "min aggregator" . "(" arg "," arg ")"
  118    | "min aggregator" . arg ":" atom
  119    | "min aggregator" . arg ":" "{" body "}"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 158
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 159
    condition  go to state 107


State 92

   98 arg: "max aggregator" . "(" arg "," arg ")"
  120    | "max aggregator" . arg ":" atom
  121    | "max aggregator" . arg ":" "{" body "}"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 160
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 161
    condition  go to state 107


State 93

  114 arg: "count aggregator" . ":" atom
  115    | "count aggregator" . ":" "{" body "}"

    ":"  shift, and go to state 162


State 94

  116 arg: "sum aggregator" . arg ":" atom
  117    | "sum aggregator" . arg ":" "{" body "}"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 163
    condition  go to state 107


State 95

  103 arg: "convert string to number" . "(" arg ")"

    "("  shift, and go to state 164


State 96

  104 arg: "convert number to string" . "(" arg ")"

    "("  shift, and go to state 165


State 97

  113 arg: "nil reference" .

    $default  reduce using rule 113 (arg)


State 98

  111 arg: "[" . "]"
  112    | "[" . recordlist "]"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "]"                             shift, and go to state 166
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg         go to state 167
    condition   go to state 107
    recordlist  go to state 168


State 99

   81 arg: "_" .

    $default  reduce using rule 81 (arg)


State 100

   82 arg: "$" .

    $default  reduce using rule 82 (arg)


State 101

  108 arg: "-" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 169
    condition  go to state 107


State 102

   86 arg: "(" . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 170
    condition  go to state 107


State 103

   83 arg: "@" . "identifier" functor_list

    "identifier"  shift, and go to state 171


State 104

  109 arg: "bnot" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 172
    condition  go to state 107


State 105

  110 arg: "lnot" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 173
    condition  go to state 107


State 106

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  135 non_empty_arg_list: arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 135 (non_empty_arg_list)


State 107

  106 arg: condition . "?" arg ":" arg

    "?"  shift, and go to state 190


State 108

  137 arg_list: non_empty_arg_list .

    $default  reduce using rule 137 (arg_list)


State 109

  136 non_empty_arg_list: arg_list . "," arg
  139 atom: rel_id "(" arg_list . ")"

    ")"  shift, and go to state 191
    ","  shift, and go to state 192


State 110

   34 rel_id: rel_id "." "identifier" .

    $default  reduce using rule 34 (rel_id)


State 111

   33 rel_id: "identifier" .
   84 arg: "identifier" .

    "("       reduce using rule 33 (rel_id)
    "."       reduce using rule 33 (rel_id)
    $default  reduce using rule 84 (arg)


State 112

  145 literal: "match predicate" . "(" arg "," arg ")"

    "("  shift, and go to state 193


State 113

  146 literal: "checks whether substring is contained in a string" . "(" arg "," arg ")"

    "("  shift, and go to state 194


State 114

  147 literal: "true literal constraint" .

    $default  reduce using rule 147 (literal)


State 115

  148 literal: "false literal constraint" .

    $default  reduce using rule 148 (literal)


State 116

  153 term: "!" . term

    "reserved keyword"                                   shift, and go to state 83
    "symbol"                                             shift, and go to state 84
    "identifier"                                         shift, and go to state 111
    "number"                                             shift, and go to state 86
    "match predicate"                                    shift, and go to state 112
    "checks whether substring is contained in a string"  shift, and go to state 113
    "concatenation of two strings"                       shift, and go to state 87
    "ordinal number of a string"                         shift, and go to state 88
    "length of a string"                                 shift, and go to state 89
    "sub-string of a string"                             shift, and go to state 90
    "min aggregator"                                     shift, and go to state 91
    "max aggregator"                                     shift, and go to state 92
    "count aggregator"                                   shift, and go to state 93
    "sum aggregator"                                     shift, and go to state 94
    "true literal constraint"                            shift, and go to state 114
    "false literal constraint"                           shift, and go to state 115
    "convert string to number"                           shift, and go to state 95
    "convert number to string"                           shift, and go to state 96
    "nil reference"                                      shift, and go to state 97
    "["                                                  shift, and go to state 98
    "_"                                                  shift, and go to state 99
    "$"                                                  shift, and go to state 100
    "-"                                                  shift, and go to state 101
    "!"                                                  shift, and go to state 116
    "("                                                  shift, and go to state 117
    "@"                                                  shift, and go to state 103
    "bnot"                                               shift, and go to state 104
    "lnot"                                               shift, and go to state 105

    rel_id     go to state 22
    arg        go to state 118
    condition  go to state 107
    atom       go to state 119
    literal    go to state 120
    term       go to state 195


State 117

   86 arg: "(" . arg ")"
  154 term: "(" . disjunction ")"

    "reserved keyword"                                   shift, and go to state 83
    "symbol"                                             shift, and go to state 84
    "identifier"                                         shift, and go to state 111
    "number"                                             shift, and go to state 86
    "match predicate"                                    shift, and go to state 112
    "checks whether substring is contained in a string"  shift, and go to state 113
    "concatenation of two strings"                       shift, and go to state 87
    "ordinal number of a string"                         shift, and go to state 88
    "length of a string"                                 shift, and go to state 89
    "sub-string of a string"                             shift, and go to state 90
    "min aggregator"                                     shift, and go to state 91
    "max aggregator"                                     shift, and go to state 92
    "count aggregator"                                   shift, and go to state 93
    "sum aggregator"                                     shift, and go to state 94
    "true literal constraint"                            shift, and go to state 114
    "false literal constraint"                           shift, and go to state 115
    "convert string to number"                           shift, and go to state 95
    "convert number to string"                           shift, and go to state 96
    "nil reference"                                      shift, and go to state 97
    "["                                                  shift, and go to state 98
    "_"                                                  shift, and go to state 99
    "$"                                                  shift, and go to state 100
    "-"                                                  shift, and go to state 101
    "!"                                                  shift, and go to state 116
    "("                                                  shift, and go to state 117
    "@"                                                  shift, and go to state 103
    "bnot"                                               shift, and go to state 104
    "lnot"                                               shift, and go to state 105

    rel_id       go to state 22
    arg          go to state 196
    condition    go to state 107
    atom         go to state 119
    literal      go to state 120
    term         go to state 121
    conjunction  go to state 122
    disjunction  go to state 197


State 118

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  140 literal: arg . "relational operator" arg
  141        | arg . "<" arg
  142        | arg . ">" arg
  143        | arg . "=" arg

    "relational operator"  shift, and go to state 198
    "type cast"            shift, and go to state 174
    "+"                    shift, and go to state 175
    "-"                    shift, and go to state 176
    "!"                    shift, and go to state 177
    "="                    shift, and go to state 199
    "*"                    shift, and go to state 179
    "/"                    shift, and go to state 180
    "^"                    shift, and go to state 181
    "%"                    shift, and go to state 182
    "<"                    shift, and go to state 200
    ">"                    shift, and go to state 201
    "band"                 shift, and go to state 185
    "bor"                  shift, and go to state 186
    "bxor"                 shift, and go to state 187
    "land"                 shift, and go to state 188
    "lor"                  shift, and go to state 189


State 119

  144 literal: atom .

    $default  reduce using rule 144 (literal)


State 120

  152 term: literal .

    $default  reduce using rule 152 (term)


State 121

  155 conjunction: term .

    $default  reduce using rule 155 (conjunction)


State 122

  156 conjunction: conjunction . "," term
  157 disjunction: conjunction .

    ","  shift, and go to state 202

    $default  reduce using rule 157 (disjunction)


State 123

  158 disjunction: disjunction . ";" conjunction
  159 body: disjunction .

    ";"  shift, and go to state 203

    $default  reduce using rule 159 (body)


State 124

  166 rule_def: head ":-" body . "."

    "."  shift, and go to state 204


State 125

  151 head: head "," atom .

    $default  reduce using rule 151 (head)


State 126

  163 exec_plan_list: "number" . ":" exec_order

    ":"  shift, and go to state 205


State 127

  164 exec_plan_list: exec_plan_list . "," "number" ":" exec_order
  165 exec_plan: "plan keyword" exec_plan_list .

    ","  shift, and go to state 206

    $default  reduce using rule 165 (exec_plan)


State 128

  177 component_head: component_head "," comp_type .

    $default  reduce using rule 177 (component_head)


State 129

  176 component_head: component_head ":" comp_type .

    $default  reduce using rule 176 (component_head)


State 130

  178 component_body: component_body . type
  179               | component_body . relation_decl
  180               | component_body . load_head
  181               | component_body . store_head
  182               | component_body . fact
  183               | component_body . rule
  184               | component_body . comp_override
  185               | component_body . component
  186               | component_body . comp_init
  188 component: component_head "{" component_body . "}"

    "identifier"                         shift, and go to state 4
    "relation declaration"               shift, and go to state 6
    "input directives declaration"       shift, and go to state 11
    "output directives declaration"      shift, and go to state 12
    "printsize directives declaration"   shift, and go to state 13
    "override rules of super-component"  shift, and go to state 207
    "type declaration"                   shift, and go to state 14
    "enum declaration"                   shift, and go to state 15
    "component declaration"              shift, and go to state 16
    "component instantiation"            shift, and go to state 17
    "numeric type declaration"           shift, and go to state 18
    "symbolic type declaration"          shift, and go to state 19
    "}"                                  shift, and go to state 208

    type            go to state 209
    rel_id          go to state 22
    relation_decl   go to state 210
    load_head       go to state 211
    store_head      go to state 212
    atom            go to state 30
    fact            go to state 213
    head            go to state 32
    rule_def        go to state 33
    rule            go to state 214
    component_head  go to state 35
    component       go to state 215
    comp_init       go to state 216
    comp_override   go to state 217


State 131

   35 non_empty_attributes: "identifier" . ":" type_id

    ":"  shift, and go to state 218


State 132

   37 attributes: non_empty_attributes .

    $default  reduce using rule 37 (attributes)


State 133

   36 non_empty_attributes: attributes . "," "identifier" ":" type_id
   56 relation_body: "identifier" "(" attributes . ")" qualifiers

    ")"  shift, and go to state 219
    ","  shift, and go to state 220


State 134

   55 relation_list: "identifier" "," relation_list .

    $default  reduce using rule 55 (relation_list)


State 135

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" . "=" "(" "identifier" "," "identifier" "," "identifier" "," "identifier" "," "identifier" ")"

    "="  shift, and go to state 221


State 136

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" . ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_def_type "}"

    ":"  shift, and go to state 222


State 137

   50 functor_type: "identifier" .

    $default  reduce using rule 50 (functor_type)


State 138

   49 functor_decl: "functor declaration" "identifier" "(" ")" . ":" functor_type

    ":"  shift, and go to state 223


State 139

   51 functor_typeargs: functor_type . "," functor_typeargs
   52                 | functor_type .

    ","  shift, and go to state 224

    $default  reduce using rule 52 (functor_typeargs)


State 140

   48 functor_decl: "functor declaration" "identifier" "(" functor_typeargs . ")" ":" functor_type

    ")"  shift, and go to state 225


State 141

   77 iodirective_list: "identifier" "," iodirective_list .

    $default  reduce using rule 77 (iodirective_list)


State 142

   63 non_empty_key_value_pairs: "identifier" . "=" "symbol"
   65                          | "identifier" . "=" "identifier"
   67                          | "identifier" . "=" "true literal constraint"
   69                          | "identifier" . "=" "false literal constraint"

    "="  shift, and go to state 226


State 143

   71 key_value_pairs: non_empty_key_value_pairs .

    $default  reduce using rule 71 (key_value_pairs)


State 144

   64 non_empty_key_value_pairs: key_value_pairs . "," "identifier" "=" "symbol"
   66                          | key_value_pairs . "," "identifier" "=" "identifier"
   68                          | key_value_pairs . "," "identifier" "=" "true literal constraint"
   70                          | key_value_pairs . "," "identifier" "=" "false literal constraint"
   78 iodirective_body: rel_id "(" key_value_pairs . ")"

    ")"  shift, and go to state 227
    ","  shift, and go to state 228


State 145

   18 type_id: "identifier" .

    $default  reduce using rule 18 (type_id)


State 146

   24 type: "type declaration" "identifier" "=" "[" . recordtype "]"
   25     | "type declaration" "identifier" "=" "[" . "]"

    "identifier"  shift, and go to state 229
    "]"           shift, and go to state 230

    recordtype  go to state 231


State 147

   19 type_id: type_id . "." "identifier"
   29 uniontype: type_id .

    "."  shift, and go to state 232

    $default  reduce using rule 29 (uniontype)


State 148

   23 type: "type declaration" "identifier" "=" uniontype .
   30 uniontype: uniontype . "|" type_id

    "|"  shift, and go to state 233

    $default  reduce using rule 23 (type)


State 149

   26 type: "enum declaration" "identifier" "=" "{" . enumtype "}"

    "case"  shift, and go to state 234

    enumtype  go to state 235


State 150

  170 type_param_list: "identifier" .

    $default  reduce using rule 170 (type_param_list)


State 151

  171 type_param_list: type_param_list . "," type_id
  173 type_params: "<" type_param_list . ">"

    ","  shift, and go to state 236
    ">"  shift, and go to state 237


State 152

  189 comp_init: "component instantiation" "identifier" "=" comp_type .

    $default  reduce using rule 189 (comp_init)


State 153

  122 arg: "reserved keyword" "(" . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 238
    condition  go to state 107


State 154

  100 arg: "concatenation of two strings" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 239
    condition  go to state 107


State 155

  101 arg: "ordinal number of a string" "(" . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 240
    condition  go to state 107


State 156

  102 arg: "length of a string" "(" . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 241
    condition  go to state 107


State 157

  105 arg: "sub-string of a string" "(" . arg "," arg "," arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 242
    condition  go to state 107


State 158

   86 arg: "(" . arg ")"
   99    | "min aggregator" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 243
    condition  go to state 107


State 159

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  118    | "min aggregator" arg . ":" atom
  119    | "min aggregator" arg . ":" "{" body "}"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ":"          shift, and go to state 244
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 160

   86 arg: "(" . arg ")"
   98    | "max aggregator" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 245
    condition  go to state 107


State 161

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  120    | "max aggregator" arg . ":" atom
  121    | "max aggregator" arg . ":" "{" body "}"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ":"          shift, and go to state 246
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 162

  114 arg: "count aggregator" ":" . atom
  115    | "count aggregator" ":" . "{" body "}"

    "identifier"  shift, and go to state 4
    "{"           shift, and go to state 247

    rel_id  go to state 22
    atom    go to state 248


State 163

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  116    | "sum aggregator" arg . ":" atom
  117    | "sum aggregator" arg . ":" "{" body "}"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ":"          shift, and go to state 249
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 164

  103 arg: "convert string to number" "(" . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 250
    condition  go to state 107


State 165

  104 arg: "convert number to string" "(" . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 251
    condition  go to state 107


State 166

  111 arg: "[" "]" .

    $default  reduce using rule 111 (arg)


State 167

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  133 recordlist: arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 133 (recordlist)


State 168

  112 arg: "[" recordlist . "]"
  134 recordlist: recordlist . "," arg

    "]"  shift, and go to state 252
    ","  shift, and go to state 253


State 169

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  108    | "-" arg .
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "^"  shift, and go to state 181
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 108 (arg)


State 170

   86 arg: "(" arg . ")"
   87    | arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 254
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 171

   83 arg: "@" "identifier" . functor_list

    "("  shift, and go to state 255

    functor_list  go to state 256


State 172

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  109    | "bnot" arg .
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "^"  shift, and go to state 181
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 109 (arg)


State 173

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  110    | "lnot" arg .
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "^"  shift, and go to state 181
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 110 (arg)


State 174

  107 arg: arg "type cast" . "identifier"

    "identifier"  shift, and go to state 257


State 175

   92 arg: arg "+" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 258
    condition  go to state 107


State 176

   93 arg: arg "-" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 259
    condition  go to state 107


State 177

  124 condition: arg "!" . "=" arg

    "="  shift, and go to state 260


State 178

  123 condition: arg "=" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 261
    condition  go to state 107


State 179

   94 arg: arg "*" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 262
    condition  go to state 107


State 180

   95 arg: arg "/" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 263
    condition  go to state 107


State 181

   97 arg: arg "^" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 264
    condition  go to state 107


State 182

   96 arg: arg "%" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 265
    condition  go to state 107


State 183

  125 condition: arg "<" . arg
  126          | arg "<" . "=" arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "="                             shift, and go to state 266
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 267
    condition  go to state 107


State 184

  127 condition: arg ">" . arg
  128          | arg ">" . "=" arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "="                             shift, and go to state 268
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 269
    condition  go to state 107


State 185

   89 arg: arg "band" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 270
    condition  go to state 107


State 186

   87 arg: arg "bor" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 271
    condition  go to state 107


State 187

   88 arg: arg "bxor" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 272
    condition  go to state 107


State 188

   91 arg: arg "land" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 273
    condition  go to state 107


State 189

   90 arg: arg "lor" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 274
    condition  go to state 107


State 190

  106 arg: condition "?" . arg ":" arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 275
    condition  go to state 107


State 191

  139 atom: rel_id "(" arg_list ")" .

    $default  reduce using rule 139 (atom)


State 192

  136 non_empty_arg_list: arg_list "," . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 276
    condition  go to state 107


State 193

  145 literal: "match predicate" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 277
    condition  go to state 107


State 194

  146 literal: "checks whether substring is contained in a string" "(" . arg "," arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 278
    condition  go to state 107


State 195

  153 term: "!" term .

    $default  reduce using rule 153 (term)


State 196

   86 arg: "(" arg . ")"
   87    | arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  140 literal: arg . "relational operator" arg
  141        | arg . "<" arg
  142        | arg . ">" arg
  143        | arg . "=" arg

    "relational operator"  shift, and go to state 198
    "type cast"            shift, and go to state 174
    "+"                    shift, and go to state 175
    "-"                    shift, and go to state 176
    "!"                    shift, and go to state 177
    ")"                    shift, and go to state 254
    "="                    shift, and go to state 199
    "*"                    shift, and go to state 179
    "/"                    shift, and go to state 180
    "^"                    shift, and go to state 181
    "%"                    shift, and go to state 182
    "<"                    shift, and go to state 200
    ">"                    shift, and go to state 201
    "band"                 shift, and go to state 185
    "bor"                  shift, and go to state 186
    "bxor"                 shift, and go to state 187
    "land"                 shift, and go to state 188
    "lor"                  shift, and go to state 189


State 197

  154 term: "(" disjunction . ")"
  158 disjunction: disjunction . ";" conjunction

    ")"  shift, and go to state 279
    ";"  shift, and go to state 203


State 198

  140 literal: arg "relational operator" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 280
    condition  go to state 107


State 199

  123 condition: arg "=" . arg
  143 literal: arg "=" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 281
    condition  go to state 107


State 200

  125 condition: arg "<" . arg
  126          | arg "<" . "=" arg
  141 literal: arg "<" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "="                             shift, and go to state 266
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 282
    condition  go to state 107


State 201

  127 condition: arg ">" . arg
  128          | arg ">" . "=" arg
  142 literal: arg ">" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "="                             shift, and go to state 268
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 283
    condition  go to state 107


State 202

  156 conjunction: conjunction "," . term

    "reserved keyword"                                   shift, and go to state 83
    "symbol"                                             shift, and go to state 84
    "identifier"                                         shift, and go to state 111
    "number"                                             shift, and go to state 86
    "match predicate"                                    shift, and go to state 112
    "checks whether substring is contained in a string"  shift, and go to state 113
    "concatenation of two strings"                       shift, and go to state 87
    "ordinal number of a string"                         shift, and go to state 88
    "length of a string"                                 shift, and go to state 89
    "sub-string of a string"                             shift, and go to state 90
    "min aggregator"                                     shift, and go to state 91
    "max aggregator"                                     shift, and go to state 92
    "count aggregator"                                   shift, and go to state 93
    "sum aggregator"                                     shift, and go to state 94
    "true literal constraint"                            shift, and go to state 114
    "false literal constraint"                           shift, and go to state 115
    "convert string to number"                           shift, and go to state 95
    "convert number to string"                           shift, and go to state 96
    "nil reference"                                      shift, and go to state 97
    "["                                                  shift, and go to state 98
    "_"                                                  shift, and go to state 99
    "$"                                                  shift, and go to state 100
    "-"                                                  shift, and go to state 101
    "!"                                                  shift, and go to state 116
    "("                                                  shift, and go to state 117
    "@"                                                  shift, and go to state 103
    "bnot"                                               shift, and go to state 104
    "lnot"                                               shift, and go to state 105

    rel_id     go to state 22
    arg        go to state 118
    condition  go to state 107
    atom       go to state 119
    literal    go to state 120
    term       go to state 284


State 203

  158 disjunction: disjunction ";" . conjunction

    "reserved keyword"                                   shift, and go to state 83
    "symbol"                                             shift, and go to state 84
    "identifier"                                         shift, and go to state 111
    "number"                                             shift, and go to state 86
    "match predicate"                                    shift, and go to state 112
    "checks whether substring is contained in a string"  shift, and go to state 113
    "concatenation of two strings"                       shift, and go to state 87
    "ordinal number of a string"                         shift, and go to state 88
    "length of a string"                                 shift, and go to state 89
    "sub-string of a string"                             shift, and go to state 90
    "min aggregator"                                     shift, and go to state 91
    "max aggregator"                                     shift, and go to state 92
    "count aggregator"                                   shift, and go to state 93
    "sum aggregator"                                     shift, and go to state 94
    "true literal constraint"                            shift, and go to state 114
    "false literal constraint"                           shift, and go to state 115
    "convert string to number"                           shift, and go to state 95
    "convert number to string"                           shift, and go to state 96
    "nil reference"                                      shift, and go to state 97
    "["                                                  shift, and go to state 98
    "_"                                                  shift, and go to state 99
    "$"                                                  shift, and go to state 100
    "-"                                                  shift, and go to state 101
    "!"                                                  shift, and go to state 116
    "("                                                  shift, and go to state 117
    "@"                                                  shift, and go to state 103
    "bnot"                                               shift, and go to state 104
    "lnot"                                               shift, and go to state 105

    rel_id       go to state 22
    arg          go to state 118
    condition    go to state 107
    atom         go to state 119
    literal      go to state 120
    term         go to state 121
    conjunction  go to state 285


State 204

  166 rule_def: head ":-" body "." .

    $default  reduce using rule 166 (rule_def)


State 205

  163 exec_plan_list: "number" ":" . exec_order

    "("  shift, and go to state 286

    exec_order  go to state 287


State 206

  164 exec_plan_list: exec_plan_list "," . "number" ":" exec_order

    "number"  shift, and go to state 288


State 207

  190 comp_override: "override rules of super-component" . "identifier"

    "identifier"  shift, and go to state 289


State 208

  188 component: component_head "{" component_body "}" .

    $default  reduce using rule 188 (component)


State 209

  178 component_body: component_body type .

    $default  reduce using rule 178 (component_body)


State 210

  179 component_body: component_body relation_decl .

    $default  reduce using rule 179 (component_body)


State 211

  180 component_body: component_body load_head .

    $default  reduce using rule 180 (component_body)


State 212

  181 component_body: component_body store_head .

    $default  reduce using rule 181 (component_body)


State 213

  182 component_body: component_body fact .

    $default  reduce using rule 182 (component_body)


State 214

  168 rule: rule . "strict marker"
  169     | rule . exec_plan
  183 component_body: component_body rule .

    "strict marker"  shift, and go to state 64
    "plan keyword"   shift, and go to state 65

    $default  reduce using rule 183 (component_body)

    exec_plan  go to state 66


State 215

  185 component_body: component_body component .

    $default  reduce using rule 185 (component_body)


State 216

  186 component_body: component_body comp_init .

    $default  reduce using rule 186 (component_body)


State 217

  184 component_body: component_body comp_override .

    $default  reduce using rule 184 (component_body)


State 218

   35 non_empty_attributes: "identifier" ":" . type_id

    "identifier"  shift, and go to state 145

    type_id  go to state 290


State 219

   56 relation_body: "identifier" "(" attributes ")" . qualifiers

    $default  reduce using rule 47 (qualifiers)

    qualifiers  go to state 291


State 220

   36 non_empty_attributes: attributes "," . "identifier" ":" type_id

    "identifier"  shift, and go to state 292


State 221

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" . "(" "identifier" "," "identifier" "," "identifier" "," "identifier" "," "identifier" ")"

    "("  shift, and go to state 293


State 222

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" . "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_def_type "}"

    "identifier"  shift, and go to state 294


State 223

   49 functor_decl: "functor declaration" "identifier" "(" ")" ":" . functor_type

    "identifier"  shift, and go to state 137

    functor_type  go to state 295


State 224

   51 functor_typeargs: functor_type "," . functor_typeargs

    "identifier"  shift, and go to state 137

    functor_type      go to state 139
    functor_typeargs  go to state 296


State 225

   48 functor_decl: "functor declaration" "identifier" "(" functor_typeargs ")" . ":" functor_type

    ":"  shift, and go to state 297


State 226

   63 non_empty_key_value_pairs: "identifier" "=" . "symbol"
   65                          | "identifier" "=" . "identifier"
   67                          | "identifier" "=" . "true literal constraint"
   69                          | "identifier" "=" . "false literal constraint"

    "symbol"                    shift, and go to state 298
    "identifier"                shift, and go to state 299
    "true literal constraint"   shift, and go to state 300
    "false literal constraint"  shift, and go to state 301


State 227

   78 iodirective_body: rel_id "(" key_value_pairs ")" .

    $default  reduce using rule 78 (iodirective_body)


State 228

   64 non_empty_key_value_pairs: key_value_pairs "," . "identifier" "=" "symbol"
   66                          | key_value_pairs "," . "identifier" "=" "identifier"
   68                          | key_value_pairs "," . "identifier" "=" "true literal constraint"
   70                          | key_value_pairs "," . "identifier" "=" "false literal constraint"

    "identifier"  shift, and go to state 302


State 229

   27 recordtype: "identifier" . ":" type_id

    ":"  shift, and go to state 303


State 230

   25 type: "type declaration" "identifier" "=" "[" "]" .

    $default  reduce using rule 25 (type)


State 231

   24 type: "type declaration" "identifier" "=" "[" recordtype . "]"
   28 recordtype: recordtype . "," "identifier" ":" type_id

    "]"  shift, and go to state 304
    ","  shift, and go to state 305


State 232

   19 type_id: type_id "." . "identifier"

    "identifier"  shift, and go to state 306


State 233

   30 uniontype: uniontype "|" . type_id

    "identifier"  shift, and go to state 145

    type_id  go to state 307


State 234

   31 enumtype: "case" . "identifier"

    "identifier"  shift, and go to state 308


State 235

   26 type: "enum declaration" "identifier" "=" "{" enumtype . "}"
   32 enumtype: enumtype . "," "case" "identifier"

    ","  shift, and go to state 309
    "}"  shift, and go to state 310


State 236

  171 type_param_list: type_param_list "," . type_id

    "identifier"  shift, and go to state 145

    type_id  go to state 311


State 237

  173 type_params: "<" type_param_list ">" .

    $default  reduce using rule 173 (type_params)


State 238

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  122    | "reserved keyword" "(" arg . ")"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 312
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 239

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  100    | "concatenation of two strings" "(" arg . "," arg ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ","          shift, and go to state 313
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 240

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  101    | "ordinal number of a string" "(" arg . ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 314
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 241

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  102    | "length of a string" "(" arg . ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 315
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 242

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  105    | "sub-string of a string" "(" arg . "," arg "," arg ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ","          shift, and go to state 316
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 243

   86 arg: "(" arg . ")"
   87    | arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
   99    | "min aggregator" "(" arg . "," arg ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 254
    ","          shift, and go to state 317
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 244

  118 arg: "min aggregator" arg ":" . atom
  119    | "min aggregator" arg ":" . "{" body "}"

    "identifier"  shift, and go to state 4
    "{"           shift, and go to state 318

    rel_id  go to state 22
    atom    go to state 319


State 245

   86 arg: "(" arg . ")"
   87    | arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
   98    | "max aggregator" "(" arg . "," arg ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 254
    ","          shift, and go to state 320
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 246

  120 arg: "max aggregator" arg ":" . atom
  121    | "max aggregator" arg ":" . "{" body "}"

    "identifier"  shift, and go to state 4
    "{"           shift, and go to state 321

    rel_id  go to state 22
    atom    go to state 322


State 247

  115 arg: "count aggregator" ":" "{" . body "}"

    "reserved keyword"                                   shift, and go to state 83
    "symbol"                                             shift, and go to state 84
    "identifier"                                         shift, and go to state 111
    "number"                                             shift, and go to state 86
    "match predicate"                                    shift, and go to state 112
    "checks whether substring is contained in a string"  shift, and go to state 113
    "concatenation of two strings"                       shift, and go to state 87
    "ordinal number of a string"                         shift, and go to state 88
    "length of a string"                                 shift, and go to state 89
    "sub-string of a string"                             shift, and go to state 90
    "min aggregator"                                     shift, and go to state 91
    "max aggregator"                                     shift, and go to state 92
    "count aggregator"                                   shift, and go to state 93
    "sum aggregator"                                     shift, and go to state 94
    "true literal constraint"                            shift, and go to state 114
    "false literal constraint"                           shift, and go to state 115
    "convert string to number"                           shift, and go to state 95
    "convert number to string"                           shift, and go to state 96
    "nil reference"                                      shift, and go to state 97
    "["                                                  shift, and go to state 98
    "_"                                                  shift, and go to state 99
    "$"                                                  shift, and go to state 100
    "-"                                                  shift, and go to state 101
    "!"                                                  shift, and go to state 116
    "("                                                  shift, and go to state 117
    "@"                                                  shift, and go to state 103
    "bnot"                                               shift, and go to state 104
    "lnot"                                               shift, and go to state 105

    rel_id       go to state 22
    arg          go to state 118
    condition    go to state 107
    atom         go to state 119
    literal      go to state 120
    term         go to state 121
    conjunction  go to state 122
    disjunction  go to state 123
    body         go to state 323


State 248

  114 arg: "count aggregator" ":" atom .

    $default  reduce using rule 114 (arg)


State 249

  116 arg: "sum aggregator" arg ":" . atom
  117    | "sum aggregator" arg ":" . "{" body "}"

    "identifier"  shift, and go to state 4
    "{"           shift, and go to state 324

    rel_id  go to state 22
    atom    go to state 325


State 250

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  103    | "convert string to number" "(" arg . ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 326
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 251

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  104    | "convert number to string" "(" arg . ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 327
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 252

  112 arg: "[" recordlist "]" .

    $default  reduce using rule 112 (arg)


State 253

  134 recordlist: recordlist "," . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 328
    condition  go to state 107


State 254

   86 arg: "(" arg ")" .

    $default  reduce using rule 86 (arg)


State 255

  129 functor_list: "(" . ")"
  130             | "(" . functor_args ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    ")"                             shift, and go to state 329
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg           go to state 330
    condition     go to state 107
    functor_args  go to state 331


State 256

   83 arg: "@" "identifier" functor_list .

    $default  reduce using rule 83 (arg)


State 257

  107 arg: arg "type cast" "identifier" .

    $default  reduce using rule 107 (arg)


State 258

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   92    | arg "+" arg .
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "*"  shift, and go to state 179
    "/"  shift, and go to state 180
    "^"  shift, and go to state 181
    "%"  shift, and go to state 182
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 92 (arg)


State 259

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   93    | arg "-" arg .
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "*"  shift, and go to state 179
    "/"  shift, and go to state 180
    "^"  shift, and go to state 181
    "%"  shift, and go to state 182
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 93 (arg)


State 260

  124 condition: arg "!" "=" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 332
    condition  go to state 107


State 261

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  123          | arg "=" arg .
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 123 (condition)


State 262

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   94    | arg "*" arg .
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "^"  shift, and go to state 181
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 94 (arg)


State 263

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   95    | arg "/" arg .
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "^"  shift, and go to state 181
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 95 (arg)


State 264

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
   97    | arg "^" arg .
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "^"  shift, and go to state 181
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 97 (arg)


State 265

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   96    | arg "%" arg .
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "^"  shift, and go to state 181
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 96 (arg)


State 266

  126 condition: arg "<" "=" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 333
    condition  go to state 107


State 267

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  125          | arg "<" arg .
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 125 (condition)


State 268

  128 condition: arg ">" "=" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 334
    condition  go to state 107


State 269

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  127          | arg ">" arg .
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 127 (condition)


State 270

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   89    | arg "band" arg .
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "+"  shift, and go to state 175
    "-"  shift, and go to state 176
    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "*"  shift, and go to state 179
    "/"  shift, and go to state 180
    "^"  shift, and go to state 181
    "%"  shift, and go to state 182
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 89 (arg)


State 271

   87 arg: arg . "bor" arg
   87    | arg "bor" arg .
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "+"     shift, and go to state 175
    "-"     shift, and go to state 176
    "!"     shift, and go to state 177
    "="     shift, and go to state 178
    "*"     shift, and go to state 179
    "/"     shift, and go to state 180
    "^"     shift, and go to state 181
    "%"     shift, and go to state 182
    "<"     shift, and go to state 183
    ">"     shift, and go to state 184
    "band"  shift, and go to state 185
    "bxor"  shift, and go to state 187

    $default  reduce using rule 87 (arg)


State 272

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   88    | arg "bxor" arg .
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "+"     shift, and go to state 175
    "-"     shift, and go to state 176
    "!"     shift, and go to state 177
    "="     shift, and go to state 178
    "*"     shift, and go to state 179
    "/"     shift, and go to state 180
    "^"     shift, and go to state 181
    "%"     shift, and go to state 182
    "<"     shift, and go to state 183
    ">"     shift, and go to state 184
    "band"  shift, and go to state 185

    $default  reduce using rule 88 (arg)


State 273

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   91    | arg "land" arg .
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "+"     shift, and go to state 175
    "-"     shift, and go to state 176
    "!"     shift, and go to state 177
    "="     shift, and go to state 178
    "*"     shift, and go to state 179
    "/"     shift, and go to state 180
    "^"     shift, and go to state 181
    "%"     shift, and go to state 182
    "<"     shift, and go to state 183
    ">"     shift, and go to state 184
    "band"  shift, and go to state 185
    "bor"   shift, and go to state 186
    "bxor"  shift, and go to state 187

    $default  reduce using rule 91 (arg)


State 274

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   90    | arg "lor" arg .
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "+"     shift, and go to state 175
    "-"     shift, and go to state 176
    "!"     shift, and go to state 177
    "="     shift, and go to state 178
    "*"     shift, and go to state 179
    "/"     shift, and go to state 180
    "^"     shift, and go to state 181
    "%"     shift, and go to state 182
    "<"     shift, and go to state 183
    ">"     shift, and go to state 184
    "band"  shift, and go to state 185
    "bor"   shift, and go to state 186
    "bxor"  shift, and go to state 187
    "land"  shift, and go to state 188

    $default  reduce using rule 90 (arg)


State 275

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  106    | condition "?" arg . ":" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ":"          shift, and go to state 335
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 276

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  136 non_empty_arg_list: arg_list "," arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 136 (non_empty_arg_list)


State 277

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  145 literal: "match predicate" "(" arg . "," arg ")"

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ","          shift, and go to state 336
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 278

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  146 literal: "checks whether substring is contained in a string" "(" arg . "," arg ")"

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ","          shift, and go to state 337
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 279

  154 term: "(" disjunction ")" .

    $default  reduce using rule 154 (term)


State 280

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  140 literal: arg "relational operator" arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 140 (literal)


State 281

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  123          | arg "=" arg .
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  143 literal: arg "=" arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    "?"       reduce using rule 123 (condition)
    $default  reduce using rule 143 (literal)


State 282

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  125          | arg "<" arg .
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  141 literal: arg "<" arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    "?"       reduce using rule 125 (condition)
    $default  reduce using rule 141 (literal)


State 283

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  127          | arg ">" arg .
  128          | arg . ">" "=" arg
  142 literal: arg ">" arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    "?"       reduce using rule 127 (condition)
    $default  reduce using rule 142 (literal)


State 284

  156 conjunction: conjunction "," term .

    $default  reduce using rule 156 (conjunction)


State 285

  156 conjunction: conjunction . "," term
  158 disjunction: disjunction ";" conjunction .

    ","  shift, and go to state 202

    $default  reduce using rule 158 (disjunction)


State 286

  162 exec_order: "(" . exec_order_list ")"

    "number"  shift, and go to state 338

    exec_order_list  go to state 339


State 287

  163 exec_plan_list: "number" ":" exec_order .

    $default  reduce using rule 163 (exec_plan_list)


State 288

  164 exec_plan_list: exec_plan_list "," "number" . ":" exec_order

    ":"  shift, and go to state 340


State 289

  190 comp_override: "override rules of super-component" "identifier" .

    $default  reduce using rule 190 (comp_override)


State 290

   19 type_id: type_id . "." "identifier"
   35 non_empty_attributes: "identifier" ":" type_id .

    "."  shift, and go to state 232

    $default  reduce using rule 35 (non_empty_attributes)


State 291

   39 qualifiers: qualifiers . "relation qualifier output"
   40           | qualifiers . "relation qualifier input"
   41           | qualifiers . "relation qualifier printsize"
   42           | qualifiers . "relation qualifier overidable"
   43           | qualifiers . "relation qualifier inline"
   44           | qualifiers . "BRIE datastructure qualifier"
   45           | qualifiers . "BTREE datastructure qualifier"
   46           | qualifiers . "equivalence relation qualifier"
   56 relation_body: "identifier" "(" attributes ")" qualifiers .

    "relation qualifier output"       shift, and go to state 341
    "relation qualifier input"        shift, and go to state 342
    "relation qualifier printsize"    shift, and go to state 343
    "BRIE datastructure qualifier"    shift, and go to state 344
    "BTREE datastructure qualifier"   shift, and go to state 345
    "equivalence relation qualifier"  shift, and go to state 346
    "relation qualifier overidable"   shift, and go to state 347
    "relation qualifier inline"       shift, and go to state 348

    $default  reduce using rule 56 (relation_body)


State 292

   36 non_empty_attributes: attributes "," "identifier" . ":" type_id

    ":"  shift, and go to state 349


State 293

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" . "identifier" "," "identifier" "," "identifier" "," "identifier" "," "identifier" ")"

    "identifier"  shift, and go to state 350


State 294

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" . "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_def_type "}"

    ","  shift, and go to state 351


State 295

   49 functor_decl: "functor declaration" "identifier" "(" ")" ":" functor_type .

    $default  reduce using rule 49 (functor_decl)


State 296

   51 functor_typeargs: functor_type "," functor_typeargs .

    $default  reduce using rule 51 (functor_typeargs)


State 297

   48 functor_decl: "functor declaration" "identifier" "(" functor_typeargs ")" ":" . functor_type

    "identifier"  shift, and go to state 137

    functor_type  go to state 352


State 298

   63 non_empty_key_value_pairs: "identifier" "=" "symbol" .

    $default  reduce using rule 63 (non_empty_key_value_pairs)


State 299

   65 non_empty_key_value_pairs: "identifier" "=" "identifier" .

    $default  reduce using rule 65 (non_empty_key_value_pairs)


State 300

   67 non_empty_key_value_pairs: "identifier" "=" "true literal constraint" .

    $default  reduce using rule 67 (non_empty_key_value_pairs)


State 301

   69 non_empty_key_value_pairs: "identifier" "=" "false literal constraint" .

    $default  reduce using rule 69 (non_empty_key_value_pairs)


State 302

   64 non_empty_key_value_pairs: key_value_pairs "," "identifier" . "=" "symbol"
   66                          | key_value_pairs "," "identifier" . "=" "identifier"
   68                          | key_value_pairs "," "identifier" . "=" "true literal constraint"
   70                          | key_value_pairs "," "identifier" . "=" "false literal constraint"

    "="  shift, and go to state 353


State 303

   27 recordtype: "identifier" ":" . type_id

    "identifier"  shift, and go to state 145

    type_id  go to state 354


State 304

   24 type: "type declaration" "identifier" "=" "[" recordtype "]" .

    $default  reduce using rule 24 (type)


State 305

   28 recordtype: recordtype "," . "identifier" ":" type_id

    "identifier"  shift, and go to state 355


State 306

   19 type_id: type_id "." "identifier" .

    $default  reduce using rule 19 (type_id)


State 307

   19 type_id: type_id . "." "identifier"
   30 uniontype: uniontype "|" type_id .

    "."  shift, and go to state 232

    $default  reduce using rule 30 (uniontype)


State 308

   31 enumtype: "case" "identifier" .

    $default  reduce using rule 31 (enumtype)


State 309

   32 enumtype: enumtype "," . "case" "identifier"

    "case"  shift, and go to state 356


State 310

   26 type: "enum declaration" "identifier" "=" "{" enumtype "}" .

    $default  reduce using rule 26 (type)


State 311

   19 type_id: type_id . "." "identifier"
  171 type_param_list: type_param_list "," type_id .

    "."  shift, and go to state 232

    $default  reduce using rule 171 (type_param_list)


State 312

  122 arg: "reserved keyword" "(" arg ")" .

    $default  reduce using rule 122 (arg)


State 313

  100 arg: "concatenation of two strings" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 357
    condition  go to state 107


State 314

  101 arg: "ordinal number of a string" "(" arg ")" .

    $default  reduce using rule 101 (arg)


State 315

  102 arg: "length of a string" "(" arg ")" .

    $default  reduce using rule 102 (arg)


State 316

  105 arg: "sub-string of a string" "(" arg "," . arg "," arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 358
    condition  go to state 107


State 317

   99 arg: "min aggregator" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 359
    condition  go to state 107


State 318

  119 arg: "min aggregator" arg ":" "{" . body "}"

    "reserved keyword"                                   shift, and go to state 83
    "symbol"                                             shift, and go to state 84
    "identifier"                                         shift, and go to state 111
    "number"                                             shift, and go to state 86
    "match predicate"                                    shift, and go to state 112
    "checks whether substring is contained in a string"  shift, and go to state 113
    "concatenation of two strings"                       shift, and go to state 87
    "ordinal number of a string"                         shift, and go to state 88
    "length of a string"                                 shift, and go to state 89
    "sub-string of a string"                             shift, and go to state 90
    "min aggregator"                                     shift, and go to state 91
    "max aggregator"                                     shift, and go to state 92
    "count aggregator"                                   shift, and go to state 93
    "sum aggregator"                                     shift, and go to state 94
    "true literal constraint"                            shift, and go to state 114
    "false literal constraint"                           shift, and go to state 115
    "convert string to number"                           shift, and go to state 95
    "convert number to string"                           shift, and go to state 96
    "nil reference"                                      shift, and go to state 97
    "["                                                  shift, and go to state 98
    "_"                                                  shift, and go to state 99
    "$"                                                  shift, and go to state 100
    "-"                                                  shift, and go to state 101
    "!"                                                  shift, and go to state 116
    "("                                                  shift, and go to state 117
    "@"                                                  shift, and go to state 103
    "bnot"                                               shift, and go to state 104
    "lnot"                                               shift, and go to state 105

    rel_id       go to state 22
    arg          go to state 118
    condition    go to state 107
    atom         go to state 119
    literal      go to state 120
    term         go to state 121
    conjunction  go to state 122
    disjunction  go to state 123
    body         go to state 360


State 319

  118 arg: "min aggregator" arg ":" atom .

    $default  reduce using rule 118 (arg)


State 320

   98 arg: "max aggregator" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 361
    condition  go to state 107


State 321

  121 arg: "max aggregator" arg ":" "{" . body "}"

    "reserved keyword"                                   shift, and go to state 83
    "symbol"                                             shift, and go to state 84
    "identifier"                                         shift, and go to state 111
    "number"                                             shift, and go to state 86
    "match predicate"                                    shift, and go to state 112
    "checks whether substring is contained in a string"  shift, and go to state 113
    "concatenation of two strings"                       shift, and go to state 87
    "ordinal number of a string"                         shift, and go to state 88
    "length of a string"                                 shift, and go to state 89
    "sub-string of a string"                             shift, and go to state 90
    "min aggregator"                                     shift, and go to state 91
    "max aggregator"                                     shift, and go to state 92
    "count aggregator"                                   shift, and go to state 93
    "sum aggregator"                                     shift, and go to state 94
    "true literal constraint"                            shift, and go to state 114
    "false literal constraint"                           shift, and go to state 115
    "convert string to number"                           shift, and go to state 95
    "convert number to string"                           shift, and go to state 96
    "nil reference"                                      shift, and go to state 97
    "["                                                  shift, and go to state 98
    "_"                                                  shift, and go to state 99
    "$"                                                  shift, and go to state 100
    "-"                                                  shift, and go to state 101
    "!"                                                  shift, and go to state 116
    "("                                                  shift, and go to state 117
    "@"                                                  shift, and go to state 103
    "bnot"                                               shift, and go to state 104
    "lnot"                                               shift, and go to state 105

    rel_id       go to state 22
    arg          go to state 118
    condition    go to state 107
    atom         go to state 119
    literal      go to state 120
    term         go to state 121
    conjunction  go to state 122
    disjunction  go to state 123
    body         go to state 362


State 322

  120 arg: "max aggregator" arg ":" atom .

    $default  reduce using rule 120 (arg)


State 323

  115 arg: "count aggregator" ":" "{" body . "}"

    "}"  shift, and go to state 363


State 324

  117 arg: "sum aggregator" arg ":" "{" . body "}"

    "reserved keyword"                                   shift, and go to state 83
    "symbol"                                             shift, and go to state 84
    "identifier"                                         shift, and go to state 111
    "number"                                             shift, and go to state 86
    "match predicate"                                    shift, and go to state 112
    "checks whether substring is contained in a string"  shift, and go to state 113
    "concatenation of two strings"                       shift, and go to state 87
    "ordinal number of a string"                         shift, and go to state 88
    "length of a string"                                 shift, and go to state 89
    "sub-string of a string"                             shift, and go to state 90
    "min aggregator"                                     shift, and go to state 91
    "max aggregator"                                     shift, and go to state 92
    "count aggregator"                                   shift, and go to state 93
    "sum aggregator"                                     shift, and go to state 94
    "true literal constraint"                            shift, and go to state 114
    "false literal constraint"                           shift, and go to state 115
    "convert string to number"                           shift, and go to state 95
    "convert number to string"                           shift, and go to state 96
    "nil reference"                                      shift, and go to state 97
    "["                                                  shift, and go to state 98
    "_"                                                  shift, and go to state 99
    "$"                                                  shift, and go to state 100
    "-"                                                  shift, and go to state 101
    "!"                                                  shift, and go to state 116
    "("                                                  shift, and go to state 117
    "@"                                                  shift, and go to state 103
    "bnot"                                               shift, and go to state 104
    "lnot"                                               shift, and go to state 105

    rel_id       go to state 22
    arg          go to state 118
    condition    go to state 107
    atom         go to state 119
    literal      go to state 120
    term         go to state 121
    conjunction  go to state 122
    disjunction  go to state 123
    body         go to state 364


State 325

  116 arg: "sum aggregator" arg ":" atom .

    $default  reduce using rule 116 (arg)


State 326

  103 arg: "convert string to number" "(" arg ")" .

    $default  reduce using rule 103 (arg)


State 327

  104 arg: "convert number to string" "(" arg ")" .

    $default  reduce using rule 104 (arg)


State 328

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  134 recordlist: recordlist "," arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 134 (recordlist)


State 329

  129 functor_list: "(" ")" .

    $default  reduce using rule 129 (functor_list)


State 330

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  131 functor_args: arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 131 (functor_args)


State 331

  130 functor_list: "(" functor_args . ")"
  132 functor_args: functor_args . "," arg

    ")"  shift, and go to state 365
    ","  shift, and go to state 366


State 332

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  124          | arg "!" "=" arg .
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 124 (condition)


State 333

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  126          | arg "<" "=" arg .
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 126 (condition)


State 334

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  128          | arg ">" "=" arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 128 (condition)


State 335

  106 arg: condition "?" arg ":" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 367
    condition  go to state 107


State 336

  145 literal: "match predicate" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 368
    condition  go to state 107


State 337

  146 literal: "checks whether substring is contained in a string" "(" arg "," . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 369
    condition  go to state 107


State 338

  160 exec_order_list: "number" .

    $default  reduce using rule 160 (exec_order_list)


State 339

  161 exec_order_list: exec_order_list . "," "number"
  162 exec_order: "(" exec_order_list . ")"

    ")"  shift, and go to state 370
    ","  shift, and go to state 371


State 340

  164 exec_plan_list: exec_plan_list "," "number" ":" . exec_order

    "("  shift, and go to state 286

    exec_order  go to state 372


State 341

   39 qualifiers: qualifiers "relation qualifier output" .

    $default  reduce using rule 39 (qualifiers)


State 342

   40 qualifiers: qualifiers "relation qualifier input" .

    $default  reduce using rule 40 (qualifiers)


State 343

   41 qualifiers: qualifiers "relation qualifier printsize" .

    $default  reduce using rule 41 (qualifiers)


State 344

   44 qualifiers: qualifiers "BRIE datastructure qualifier" .

    $default  reduce using rule 44 (qualifiers)


State 345

   45 qualifiers: qualifiers "BTREE datastructure qualifier" .

    $default  reduce using rule 45 (qualifiers)


State 346

   46 qualifiers: qualifiers "equivalence relation qualifier" .

    $default  reduce using rule 46 (qualifiers)


State 347

   42 qualifiers: qualifiers "relation qualifier overidable" .

    $default  reduce using rule 42 (qualifiers)


State 348

   43 qualifiers: qualifiers "relation qualifier inline" .

    $default  reduce using rule 43 (qualifiers)


State 349

   36 non_empty_attributes: attributes "," "identifier" ":" . type_id

    "identifier"  shift, and go to state 145

    type_id  go to state 373


State 350

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" . "," "identifier" "," "identifier" "," "identifier" "," "identifier" ")"

    ","  shift, and go to state 374


State 351

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," . "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_def_type "}"

    "identifier"  shift, and go to state 375


State 352

   48 functor_decl: "functor declaration" "identifier" "(" functor_typeargs ")" ":" functor_type .

    $default  reduce using rule 48 (functor_decl)


State 353

   64 non_empty_key_value_pairs: key_value_pairs "," "identifier" "=" . "symbol"
   66                          | key_value_pairs "," "identifier" "=" . "identifier"
   68                          | key_value_pairs "," "identifier" "=" . "true literal constraint"
   70                          | key_value_pairs "," "identifier" "=" . "false literal constraint"

    "symbol"                    shift, and go to state 376
    "identifier"                shift, and go to state 377
    "true literal constraint"   shift, and go to state 378
    "false literal constraint"  shift, and go to state 379


State 354

   19 type_id: type_id . "." "identifier"
   27 recordtype: "identifier" ":" type_id .

    "."  shift, and go to state 232

    $default  reduce using rule 27 (recordtype)


State 355

   28 recordtype: recordtype "," "identifier" . ":" type_id

    ":"  shift, and go to state 380


State 356

   32 enumtype: enumtype "," "case" . "identifier"

    "identifier"  shift, and go to state 381


State 357

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  100    | "concatenation of two strings" "(" arg "," arg . ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 382
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 358

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  105    | "sub-string of a string" "(" arg "," arg . "," arg ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ","          shift, and go to state 383
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 359

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
   99    | "min aggregator" "(" arg "," arg . ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 384
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 360

  119 arg: "min aggregator" arg ":" "{" body . "}"

    "}"  shift, and go to state 385


State 361

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
   98    | "max aggregator" "(" arg "," arg . ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 386
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 362

  121 arg: "max aggregator" arg ":" "{" body . "}"

    "}"  shift, and go to state 387


State 363

  115 arg: "count aggregator" ":" "{" body "}" .

    $default  reduce using rule 115 (arg)


State 364

  117 arg: "sum aggregator" arg ":" "{" body . "}"

    "}"  shift, and go to state 388


State 365

  130 functor_list: "(" functor_args ")" .

    $default  reduce using rule 130 (functor_list)


State 366

  132 functor_args: functor_args "," . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 389
    condition  go to state 107


State 367

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  106    | condition "?" arg ":" arg .
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "!"  shift, and go to state 177
    "="  shift, and go to state 178
    "<"  shift, and go to state 183
    ">"  shift, and go to state 184

    $default  reduce using rule 106 (arg)


State 368

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  145 literal: "match predicate" "(" arg "," arg . ")"

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 390
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 369

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  146 literal: "checks whether substring is contained in a string" "(" arg "," arg . ")"

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 391
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 370

  162 exec_order: "(" exec_order_list ")" .

    $default  reduce using rule 162 (exec_order)


State 371

  161 exec_order_list: exec_order_list "," . "number"

    "number"  shift, and go to state 392


State 372

  164 exec_plan_list: exec_plan_list "," "number" ":" exec_order .

    $default  reduce using rule 164 (exec_plan_list)


State 373

   19 type_id: type_id . "." "identifier"
   36 non_empty_attributes: attributes "," "identifier" ":" type_id .

    "."  shift, and go to state 232

    $default  reduce using rule 36 (non_empty_attributes)


State 374

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" "," . "identifier" "," "identifier" "," "identifier" "," "identifier" ")"

    "identifier"  shift, and go to state 393


State 375

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" . ":" "identifier" ")" ":" "identifier" "{" lattice_def_type "}"

    ":"  shift, and go to state 394


State 376

   64 non_empty_key_value_pairs: key_value_pairs "," "identifier" "=" "symbol" .

    $default  reduce using rule 64 (non_empty_key_value_pairs)


State 377

   66 non_empty_key_value_pairs: key_value_pairs "," "identifier" "=" "identifier" .

    $default  reduce using rule 66 (non_empty_key_value_pairs)


State 378

   68 non_empty_key_value_pairs: key_value_pairs "," "identifier" "=" "true literal constraint" .

    $default  reduce using rule 68 (non_empty_key_value_pairs)


State 379

   70 non_empty_key_value_pairs: key_value_pairs "," "identifier" "=" "false literal constraint" .

    $default  reduce using rule 70 (non_empty_key_value_pairs)


State 380

   28 recordtype: recordtype "," "identifier" ":" . type_id

    "identifier"  shift, and go to state 145

    type_id  go to state 395


State 381

   32 enumtype: enumtype "," "case" "identifier" .

    $default  reduce using rule 32 (enumtype)


State 382

  100 arg: "concatenation of two strings" "(" arg "," arg ")" .

    $default  reduce using rule 100 (arg)


State 383

  105 arg: "sub-string of a string" "(" arg "," arg "," . arg ")"

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 396
    condition  go to state 107


State 384

   99 arg: "min aggregator" "(" arg "," arg ")" .

    $default  reduce using rule 99 (arg)


State 385

  119 arg: "min aggregator" arg ":" "{" body "}" .

    $default  reduce using rule 119 (arg)


State 386

   98 arg: "max aggregator" "(" arg "," arg ")" .

    $default  reduce using rule 98 (arg)


State 387

  121 arg: "max aggregator" arg ":" "{" body "}" .

    $default  reduce using rule 121 (arg)


State 388

  117 arg: "sum aggregator" arg ":" "{" body "}" .

    $default  reduce using rule 117 (arg)


State 389

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg
  132 functor_args: functor_args "," arg .

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 132 (functor_args)


State 390

  145 literal: "match predicate" "(" arg "," arg ")" .

    $default  reduce using rule 145 (literal)


State 391

  146 literal: "checks whether substring is contained in a string" "(" arg "," arg ")" .

    $default  reduce using rule 146 (literal)


State 392

  161 exec_order_list: exec_order_list "," "number" .

    $default  reduce using rule 161 (exec_order_list)


State 393

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" "," "identifier" . "," "identifier" "," "identifier" "," "identifier" ")"

    ","  shift, and go to state 397


State 394

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" . "identifier" ")" ":" "identifier" "{" lattice_def_type "}"

    "identifier"  shift, and go to state 398


State 395

   19 type_id: type_id . "." "identifier"
   28 recordtype: recordtype "," "identifier" ":" type_id .

    "."  shift, and go to state 232

    $default  reduce using rule 28 (recordtype)


State 396

   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  105    | "sub-string of a string" "(" arg "," arg "," arg . ")"
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 399
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 397

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" "," "identifier" "," . "identifier" "," "identifier" "," "identifier" ")"

    "identifier"  shift, and go to state 400


State 398

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" . ")" ":" "identifier" "{" lattice_def_type "}"

    ")"  shift, and go to state 401


State 399

  105 arg: "sub-string of a string" "(" arg "," arg "," arg ")" .

    $default  reduce using rule 105 (arg)


State 400

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" "," "identifier" "," "identifier" . "," "identifier" "," "identifier" ")"

    ","  shift, and go to state 402


State 401

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" . ":" "identifier" "{" lattice_def_type "}"

    ":"  shift, and go to state 403


State 402

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" "," "identifier" "," "identifier" "," . "identifier" "," "identifier" ")"

    "identifier"  shift, and go to state 404


State 403

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" . "identifier" "{" lattice_def_type "}"

    "identifier"  shift, and go to state 405


State 404

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" "," "identifier" "," "identifier" "," "identifier" . "," "identifier" ")"

    ","  shift, and go to state 406


State 405

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" . "{" lattice_def_type "}"

    "{"  shift, and go to state 407


State 406

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" "," "identifier" "," "identifier" "," "identifier" "," . "identifier" ")"

    "identifier"  shift, and go to state 408


State 407

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" . lattice_def_type "}"

    "case"  shift, and go to state 409

    lattice_def_type  go to state 410


State 408

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" "," "identifier" "," "identifier" "," "identifier" "," "identifier" . ")"

    ")"  shift, and go to state 411


State 409

   60 lattice_def_type: "case" . "(" arg "," arg ")" "=>" arg

    "("  shift, and go to state 412


State 410

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_def_type . "}"
   61 lattice_def_type: lattice_def_type . "," "case" "(" arg "," arg ")" "=>" arg
   62                 | lattice_def_type . "," "case" "_" "=>" arg

    ","  shift, and go to state 413
    "}"  shift, and go to state 414


State 411

   58 lattice_asscoiation: "lattice components type declaration" "identifier" "<" ">" "=" "(" "identifier" "," "identifier" "," "identifier" "," "identifier" "," "identifier" ")" .

    $default  reduce using rule 58 (lattice_asscoiation)


State 412

   60 lattice_def_type: "case" "(" . arg "," arg ")" "=>" arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 415
    condition  go to state 107


State 413

   61 lattice_def_type: lattice_def_type "," . "case" "(" arg "," arg ")" "=>" arg
   62                 | lattice_def_type "," . "case" "_" "=>" arg

    "case"  shift, and go to state 416


State 414

   59 lattice_def: "lattice binary function definition" "identifier" "(" "identifier" ":" "identifier" "," "identifier" ":" "identifier" ")" ":" "identifier" "{" lattice_def_type "}" .

    $default  reduce using rule 59 (lattice_def)


State 415

   60 lattice_def_type: "case" "(" arg . "," arg ")" "=>" arg
   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ","          shift, and go to state 417
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 416

   61 lattice_def_type: lattice_def_type "," "case" . "(" arg "," arg ")" "=>" arg
   62                 | lattice_def_type "," "case" . "_" "=>" arg

    "_"  shift, and go to state 418
    "("  shift, and go to state 419


State 417

   60 lattice_def_type: "case" "(" arg "," . arg ")" "=>" arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 420
    condition  go to state 107


State 418

   62 lattice_def_type: lattice_def_type "," "case" "_" . "=>" arg

    "=>"  shift, and go to state 421


State 419

   61 lattice_def_type: lattice_def_type "," "case" "(" . arg "," arg ")" "=>" arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 422
    condition  go to state 107


State 420

   60 lattice_def_type: "case" "(" arg "," arg . ")" "=>" arg
   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 423
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 421

   62 lattice_def_type: lattice_def_type "," "case" "_" "=>" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 424
    condition  go to state 107


State 422

   61 lattice_def_type: lattice_def_type "," "case" "(" arg . "," arg ")" "=>" arg
   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ","          shift, and go to state 425
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 423

   60 lattice_def_type: "case" "(" arg "," arg ")" . "=>" arg

    "=>"  shift, and go to state 426


State 424

   62 lattice_def_type: lattice_def_type "," "case" "_" "=>" arg .
   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 62 (lattice_def_type)


State 425

   61 lattice_def_type: lattice_def_type "," "case" "(" arg "," . arg ")" "=>" arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 427
    condition  go to state 107


State 426

   60 lattice_def_type: "case" "(" arg "," arg ")" "=>" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 428
    condition  go to state 107


State 427

   61 lattice_def_type: lattice_def_type "," "case" "(" arg "," arg . ")" "=>" arg
   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    ")"          shift, and go to state 429
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189


State 428

   60 lattice_def_type: "case" "(" arg "," arg ")" "=>" arg .
   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 60 (lattice_def_type)


State 429

   61 lattice_def_type: lattice_def_type "," "case" "(" arg "," arg ")" . "=>" arg

    "=>"  shift, and go to state 430


State 430

   61 lattice_def_type: lattice_def_type "," "case" "(" arg "," arg ")" "=>" . arg

    "reserved keyword"              shift, and go to state 83
    "symbol"                        shift, and go to state 84
    "identifier"                    shift, and go to state 85
    "number"                        shift, and go to state 86
    "concatenation of two strings"  shift, and go to state 87
    "ordinal number of a string"    shift, and go to state 88
    "length of a string"            shift, and go to state 89
    "sub-string of a string"        shift, and go to state 90
    "min aggregator"                shift, and go to state 91
    "max aggregator"                shift, and go to state 92
    "count aggregator"              shift, and go to state 93
    "sum aggregator"                shift, and go to state 94
    "convert string to number"      shift, and go to state 95
    "convert number to string"      shift, and go to state 96
    "nil reference"                 shift, and go to state 97
    "["                             shift, and go to state 98
    "_"                             shift, and go to state 99
    "$"                             shift, and go to state 100
    "-"                             shift, and go to state 101
    "("                             shift, and go to state 102
    "@"                             shift, and go to state 103
    "bnot"                          shift, and go to state 104
    "lnot"                          shift, and go to state 105

    arg        go to state 431
    condition  go to state 107


State 431

   61 lattice_def_type: lattice_def_type "," "case" "(" arg "," arg ")" "=>" arg .
   87 arg: arg . "bor" arg
   88    | arg . "bxor" arg
   89    | arg . "band" arg
   90    | arg . "lor" arg
   91    | arg . "land" arg
   92    | arg . "+" arg
   93    | arg . "-" arg
   94    | arg . "*" arg
   95    | arg . "/" arg
   96    | arg . "%" arg
   97    | arg . "^" arg
  107    | arg . "type cast" "identifier"
  123 condition: arg . "=" arg
  124          | arg . "!" "=" arg
  125          | arg . "<" arg
  126          | arg . "<" "=" arg
  127          | arg . ">" arg
  128          | arg . ">" "=" arg

    "type cast"  shift, and go to state 174
    "+"          shift, and go to state 175
    "-"          shift, and go to state 176
    "!"          shift, and go to state 177
    "="          shift, and go to state 178
    "*"          shift, and go to state 179
    "/"          shift, and go to state 180
    "^"          shift, and go to state 181
    "%"          shift, and go to state 182
    "<"          shift, and go to state 183
    ">"          shift, and go to state 184
    "band"       shift, and go to state 185
    "bor"        shift, and go to state 186
    "bxor"       shift, and go to state 187
    "land"       shift, and go to state 188
    "lor"        shift, and go to state 189

    $default  reduce using rule 61 (lattice_def_type)
